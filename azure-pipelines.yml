# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- re-trigger

parameters:
  - name: environ
    displayName: Environment
    type: string
    default: dev
    values:
    - dev
    - test
    - uat
    - prod
  - name: depends_on
    type: object
    default:
      dev:
        - validate
        - Build
      test:
        - Build 

resources:
- repo: self

variables:
# All the below code will be based on these flags. The condition for flag can be changed in one place here
# Example: Say, tomorrow we want to determine dev by branch name etc.
- name: isDev
  value: ${{eq(parameters.environ, 'dev')}}
- name: isTest
  value: ${{eq(parameters.environ, 'test')}}
- name: isUat
  value: ${{eq(parameters.environ, 'test')}}
- name: isProd
  value: ${{eq(parameters.environ, 'prod')}}
- name: tag
  value: '$(Build.BuildId)'
- name: ENVIRONMENT
  value: ${{ parameters.environ }}


stages:

- stage: validate
  condition: eq(variables.isDev, true)
  displayName: validate
  jobs:
  - job: validateYaml
    displayName: validate yaml
    pool:
      vmImage: 'ubuntu-latest'
    steps: 
    - task: Bash@3
      displayName: Print depends
      inputs:
        targetType: 'inline'
        script: echo dependencies = ${{join(' ', parameters.depends_on[parameters.environ]) }}
    - task: Bash@3
      displayName: Print is flags
      inputs:
        targetType: 'inline'
        script: echo isDev = $(isDev), isTest = $(isTest), isUat=$(isUat), isProd=$(isProd)
- stage: Build
  displayName: Build image
  condition: or(eq(variables.isProd, true), eq(variables.isTest, true))
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Maven@3
      displayName: Maven build
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean install'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    
    - task: Docker@2
      condition: eq(variables.isProd, true)
      displayName: Build an image - only for prod
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(tag)
- stage: ReTriggerIfApplicable
  condition: and(succeeded(),or(eq(variables.isDev, true), eq(variables.isTest, true)))
  displayName: Retrigger
  dependsOn:
      - ${{ each stage in parameters.depends_on[parameters.environ] }}:
        - ${{ stage }}
  jobs:
    - job: 
      steps:
      - template: re-trigger.yaml
